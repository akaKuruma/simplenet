#!/usr/bin/python

# Copyright 2012 Locaweb.
# All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#        http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
# @author: Juliano Martinez (ncode), Locaweb.
# @author: Luiz Ozaki, Locaweb.

from gevent import monkey
monkey.patch_all()

import os
import sys
import grp
import pwd
import thread

import bottle
from bottle import delete, put, get, post, error, run, debug
from bottle import abort, request, ServerAdapter, response

from simplenet.common.callback import callback_run, callback_run2
from simplenet.common.config import config, stdout_logger, StdOutAndErrWapper, get_logger
from simplenet.routes import base, policy, errors, switch

app = bottle.app()
logger = get_logger()

def start():
    os.setgid(grp.getgrnam('nogroup')[2])
    os.setuid(pwd.getpwnam(config.get("server", "user"))[2])
    debug(config.getboolean("server", "debug"))
    port = config.getint("server", "port")
    bind_addr = config.get("server", "bind_addr")
    logger.info("Starting SimpleNet Server")
    try:
        thread.start_new_thread( callback_run )
        thread.start_new_thread( callback_run2 )
    except:
        logger.exception("Error: unable to start thread")
    run(host=bind_addr, port=port, server="gevent")
    logger.info("Stopped SimpleNet Server")


def main(action="foreground"):
    from supay import Daemon
    daemon = Daemon(name="simplenet", log=False)

    if action ==  "start":
        daemon.start()
        sys.stdout = StdOutAndErrWapper()
        sys.stderr = StdOutAndErrWapper()
        start()
    elif action == "foreground":
        stdout_logger()
        start()
    elif action == "stop":
        daemon.stop()
        logger.info("Stopped SimpleNet Server")
    elif action == "status":
        daemon.status()
    else:
        cli_help()


def cli_help():
    print "Usage: %s <start|stop|status|foreground>" % sys.argv[0]
    sys.exit(1)


def cli():
    if len(sys.argv) < 2:
        cli_help()
    main(action=sys.argv[1])


if __name__ == '__main__':
    cli()
